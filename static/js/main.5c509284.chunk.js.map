{"version":3,"sources":["images/bomb.svg","images/flag.svg","images/in-love.svg","images/sad.svg","images/happy.svg","components/Header.js","actions/index.js","components/Game.js","makeGrid.js","reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","store","useSelector","state","dispatch","useDispatch","className","darkmode","style","src","logo","height","width","alt","onClick","e","type","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","instructions","role","aria-label","href","target","rel","Game","reveal","i","j","rowNum","parseInt","colNum","revealCell","dataset","flag","flagCell","getButtonStyle","element","dark","revealed","value","color","blasted","remaining","mines","cryingsvg","coolsvg","confusionsvg","mode","getFlagButtonStyle","flagMode","flagsvg","grid","map","item","entry","key","data-i","data-j","disabled","mine","bombsvg","flagged","rows","cols","totalMines","Cell","makeGrid","m","arr","Array","length","make2DArray","initializeGrid","options","push","n","index","Math","floor","random","choice","splice","insertMines","cell","xoff","yoff","populateValues","reducer","action","root","document","documentElement","setProperty","revealcell","Object","assign","newState","resetGrid","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5c509284.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bomb.9703aa7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.55702a33.svg\";","module.exports = __webpack_public_path__ + \"static/media/in-love.bd436ae0.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.3ef9f366.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy.0d503d2e.svg\";","import React from 'react';\nimport logo from '../images/bomb.svg';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleDarkMode, toggleInstructions } from '../actions';\n\nfunction Header() {\n\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={store.darkmode ? \"dark\" : \"\"}>\n      <header className=\"header\" style={{ 'display': 'flex', 'marginBottom': '15px', 'justifyContent': 'space-between' }}>\n        <div className=\"logo\">\n          <img src={logo} style={{ 'margin': '10px' }} height=\"40px\" width=\"40px\" className=\"App-logo\" alt=\"logo\" />\n          <h2 style={{ 'marginTop': '18px' }}>MINESWEEPER</h2>\n        </div>\n        <div className={store.darkmode ? \"dark\" : \"\"}>\n          <button onClick={(e) => dispatch(toggleDarkMode(e))} className=\"headerButton\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-moon c-button__icon\"><path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path></svg>\n          </button>\n          {store.instructions &&\n            <div className={store.darkmode ? \"dark card\" : \"card\"}>\n              <strong className=\"textCenter\"><p>How to play?</p></strong>\n              <span>Contrary to popular belief, it's actually quite simple.</span>\n              <ul>\n                <li> Click a square, the number displayed in it is the number of mines surrounding it. If there is no mine surrounding it, all the surrounding blocks will be opened for you.</li>\n                <li>Enabling the <i>flag mode</i> will flag the block rather than opening when you click on a block.</li>\n                <li>Open all the blocks with out mines to get chicken dinner. <span role=\"img\" aria-label=\"emoji\">😋</span></li>\n              </ul>\n              <a href=\"https://en.wikipedia.org/wiki/Minesweeper_(video_game)\" target=\"_blank\" rel=\"noopener noreferrer\"><span>Read More</span></a>\n            </div>}\n          <span onClick={(e) => dispatch(toggleInstructions(e))} className=\"how\" style={{ 'float': 'right' }}>?</span>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","export const withdrawMoney = amount => ({\n  type: \"WITHDRAW\",\n  payload: amount\n});\n\nexport const revealCell = (i, j) => ({\n  type: \"REVEAL\",\n  rowNum: parseInt(i),\n  colNum: parseInt(j)\n});\n\nexport const reset = () => ({\n  type: \"RESET\"\n});\n\nexport const toggleFlagMode = () => ({\n  type: \"TOGGLEFLAGMODE\"\n});\n\nexport const flagCell = (i, j) => ({\n  type: \"FLAG\",\n  rowNum: parseInt(i),\n  colNum: parseInt(j)\n});\n\nexport const toggleDarkMode = () => ({\n  type: \"DARKMODE\"\n});\n\nexport const toggleInstructions = () => ({\n  type: \"INSTRUCTIONS\"\n});","import React from \"react\";\nimport { revealCell, reset, toggleFlagMode, flagCell } from \"../actions\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport flagsvg from '../images/flag.svg';\nimport bombsvg from '../images/bomb.svg';\nimport coolsvg from '../images/in-love.svg';\nimport cryingsvg from '../images/sad.svg';\nimport confusionsvg from '../images/happy.svg';\n\n\nfunction Game() {\n\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const reveal = e => {\n    const i = e.target.dataset.i;\n    const j = e.target.dataset.j;\n    return revealCell(i, j);\n  };\n\n  const flag = e => {\n    const i = e.target.dataset.i;\n    const j = e.target.dataset.j;\n    return flagCell(i, j);\n  };\n\n  const getButtonStyle = (element, dark) => {\n    let style = {}\n    if (element.revealed) {\n      if (dark) {\n        style[\"boxShadow\"] = \"inset 3px 3px 6px rgb(52, 52, 49), inset -3px -3px 6px #000000\";\n      } else {\n        style[\"boxShadow\"] = \"inset 3px 3px 6px #bec3c9, inset -3px -3px 6px #ffffff\";\n      }\n      style[\"fontWeight\"] = \"bold\";\n    }\n    if (element.value === 1) {\n      style.color = \"#48BB78\";\n    }\n    if (element.value === 2) {\n      style.color = \"#D69E2E\";\n    }\n    if (element.value >= 3) {\n      style.color = \"#F56565\";\n    }\n    return style;\n  }\n\n  const getFlagButtonStyle = (mode, dark) => {\n    let style = {};\n    if (mode) {\n      if (dark) {\n        style[\"boxShadow\"] = \"inset 3px 3px 6px rgb(52, 52, 49), inset -3px -3px 6px #000000\";\n      } else {\n        style[\"boxShadow\"] = \"inset 3px 3px 6px #bec3c9, inset -3px -3px 6px #ffffff\";\n      }\n      style[\"color\"] = \"#F56565\";\n    }\n    return style;\n  }\n\n  return (\n    <div className={store.darkmode ? \"dark\" : \"\"}>\n      <div className=\"App\" >\n        {\n          store.blasted && <span>Game over, Please try again!</span>\n        }\n        {\n          store.remaining === store.mines && <h4>Great Game!</h4>\n        }\n        <section className={store.darkmode ? \"App__buttons dark\" : \"App__buttons\"}>\n          <button onClick={(e) => dispatch(reset(e))}>\n            {\n              store.blasted ? <img width=\"15px\" height=\"15px\" src={cryingsvg} alt=\"sad\" style={{ 'marginRight': \"5px\" }}></img> :\n                (store.remaining === store.mines) ?\n                  <img width=\"15px\" height=\"15px\" alt=\"cool\" src={coolsvg} style={{ 'marginRight': \"5px\" }}></img> :\n                  <img width=\"15px\" height=\"15px\" alt=\"reset\" src={confusionsvg} style={{ 'marginRight': \"5px\" }}></img>\n            }Reset</button>\n          <button style={getFlagButtonStyle(store.flagMode, store.darkmode)} onClick={(e) => dispatch(toggleFlagMode(e))}>\n            <img width=\"15px\" height=\"15px\" src={flagsvg} alt=\"flag\"></img> Flag Mode</button>\n        </section>\n        <div className=\"grid\">\n          <table>\n            <tbody>\n              {\n                store.grid.map(function (item, i) {\n                  var entry = item.map(function (element, j) {\n                    return (\n                      <td key={j}>\n                        <button data-i={i}\n                          data-j={j}\n                          style={getButtonStyle(element, store.darkmode)}\n                          onClick={(e) => dispatch(store.flagMode ? flag(e) : reveal(e))}\n                          disabled={store.blasted || element.revealed || store.remaining === store.mines}>\n                          {element.revealed ?\n                            (element.mine ? <img data-i={i} data-j={j} alt=\"bomb\" width=\"20px\" height=\"20px\" src={bombsvg}></img> : (element.value === 0 ? \"\" : element.value)) :\n                            (element.flagged ? <img data-i={i} data-j={j} alt=\"flag\" width=\"15px\" height=\"15px\" src={flagsvg}></img> : \" \")}\n                        </button>\n                      </td>\n                    );\n                  });\n                  return (\n                    <tr key={i}>{entry}</tr>\n                  );\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","let rows = 10, cols = 10, totalMines = 10;\n\n\nfunction make2DArray(rows, cols) {\n  let arr = new Array(rows);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = new Array(cols);\n  }\n  return arr;\n}\n\nfunction Cell(rowNum, colNum) {\n  return {\n    mine: false,\n    value: 0,\n    revealed: false,\n    rowNum: rowNum,\n    colNum: colNum,\n    flagged: false\n  }\n}\n\nfunction initializeGrid(grid) {\n  for (let i = 0; i < cols; i++) {\n    for (let j = 0; j < rows; j++) {\n      grid[i][j] = new Cell(i, j);\n    }\n  }\n}\n\nfunction insertMines(grid) {\n  let options = [];\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      options.push([i, j]);\n    }\n  }\n  for (let n = 0; n < totalMines; n++) {\n    let index = Math.floor(Math.random() * options.length);\n    let choice = options[index];\n    let i = choice[0];\n    let j = choice[1];\n    // Deletes that spot so it's no longer an option\n    options.splice(index, 1);\n    grid[i][j].mine = true;\n  }\n}\n\nfunction populateValues(grid) {\n  for (let rowNum = 0; rowNum < rows; rowNum++) {\n    for (let colNum = 0; colNum < cols; colNum++) {\n      let cell = grid[rowNum][colNum];\n      if (cell.mine)\n        cell.value = 'M';\n      else {\n        for (var xoff = -1; xoff <= 1; xoff++) {\n          var i = rowNum + xoff;\n          if (i < 0 || i >= rows) continue;\n\n          for (var yoff = -1; yoff <= 1; yoff++) {\n            var j = colNum + yoff;\n            if (j < 0 || j >= cols) continue;\n\n            var neighbor = grid[i][j];\n            if (neighbor.mine) {\n              cell.value++;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction makeGrid(i, j, m) {\n  rows = i;\n  cols = j;\n  totalMines = m;\n  let grid = make2DArray(i, j);\n  initializeGrid(grid);\n  insertMines(grid);\n  populateValues(grid);\n  const initialState = {\n    rows: rows,\n    cols: cols,\n    mines: totalMines,\n    grid: grid,\n    blasted: false,\n    remaining: rows * cols,\n    flagMode: false,\n    darkmode: false,\n    instructions: false\n  };\n  return initialState;\n}\n\nexport default makeGrid;","import makeGrid from \"../makeGrid\";\n\nfunction revealcell(state, rowNum, colNum) {\n  let grid = state.grid;\n  if (!grid[rowNum][colNum].flagged) {\n    state.remaining--;\n    grid[rowNum][colNum].revealed = true;\n    if (grid[rowNum][colNum].value === 'M')\n      state.blasted = true;\n    if (grid[rowNum][colNum].value === 0) {\n      for (var xoff = -1; xoff <= 1; xoff++) {\n        var i = rowNum + xoff;\n        if (i < 0 || i >= grid.length) continue;\n\n        for (var yoff = -1; yoff <= 1; yoff++) {\n          var j = colNum + yoff;\n          if (j < 0 || j >= grid[i].length) continue;\n\n          if (!grid[i][j].revealed) revealcell(state, i, j);\n        }\n      }\n    }\n  }\n  return state;\n}\n\nfunction flagcell(grid, rowNum, colNum) {\n  grid[rowNum][colNum].flagged = !grid[rowNum][colNum].flagged;\n  return grid;\n}\n\nfunction resetGrid(state) {\n  let newState = makeGrid(state.rows, state.cols, state.mines)\n  newState.darkmode = state.darkmode;\n  return newState;\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DARKMODE\":\n      let root = document.documentElement;\n      if (state.darkmode)\n        root.style.setProperty('--main-bg-color', \"#E0E5EC\");\n      else\n        root.style.setProperty('--main-bg-color', \"#181818\");\n      return {\n        ...state,\n        darkmode: !state.darkmode\n      };\n\n    case \"REVEAL\":\n      return revealcell(Object.assign({}, state), action.rowNum, action.colNum);\n\n    case \"RESET\":\n      return resetGrid(state);\n\n    case \"TOGGLEFLAGMODE\":\n      return {\n        ...state,\n        flagMode: !state.flagMode\n      }\n\n    case \"INSTRUCTIONS\":\n      return {\n        ...state,\n        instructions: !state.instructions\n      }\n\n    case \"FLAG\":\n      return {\n        ...state,\n        grid: flagcell(state.grid, action.rowNum, action.colNum)\n      }\n\n    default:\n      return state;\n  }\n};\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport makeGrid from \"../makeGrid\";\n\nlet rows = 10;\nlet cols = 10;\nlet totalMines = 20;\n\nconst store = createStore(reducer, makeGrid(rows, cols, totalMines), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","import React from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport Game from './components/Game';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\"\n\nfunction App() {\n  return (\n    <div>\n      <Provider store={store}>\n        <Header />\n      </Provider>\n      <Provider store={store}>\n        <Game />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}