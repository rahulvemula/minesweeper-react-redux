{"version":3,"sources":["images/bomb.svg","images/flag.svg","images/in-love.svg","images/sad.svg","images/happy.svg","components/Header.js","actions/index.js","components/Game.js","makeGrid.js","reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","store","useSelector","state","dispatch","useDispatch","className","darkmode","style","src","logo","height","width","alt","onClick","e","type","xmlns","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","class","d","instructions","href","target","Game","reveal","i","j","rowNum","parseInt","colNum","revealCell","dataset","flag","flagCell","getButtonStyle","element","dark","revealed","value","color","blasted","remaining","mines","cryingsvg","coolsvg","confusionsvg","mode","getFlagButtonStyle","flagMode","flagsvg","grid","map","item","entry","key","data-i","data-j","disabled","mine","bombsvg","flagged","rows","cols","totalMines","Cell","makeGrid","m","arr","Array","length","make2DArray","initializeGrid","options","push","n","index","Math","floor","random","choice","splice","insertMines","cell","xoff","yoff","populateValues","reducer","action","root","document","documentElement","setProperty","revealcell","Object","assign","newState","resetGrid","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8cab07d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bomb.9703aa7c.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.c71b9d14.svg\";","module.exports = __webpack_public_path__ + \"static/media/in-love.f350c24f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.44bda2f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/happy.63d6e061.svg\";","import React from 'react';\r\nimport logo from '../images/bomb.svg';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleDarkMode, toggleInstructions } from '../actions';\r\n\r\nfunction Header() {\r\n\r\n  const store = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={store.darkmode ? \"dark\" : \"\"}>\r\n      <header className=\"header\" style={{ 'display': 'flex', 'margin-bottom': '15px', 'justify-content': 'space-between' }}>\r\n        <div className=\"logo\">\r\n          <img src={logo} style={{ 'margin': '10px' }} height=\"40px\" width=\"40px\" className=\"App-logo\" alt=\"logo\" />\r\n          <h2 style={{ 'margin-top': '18px' }}>MINESWEEPER</h2>\r\n        </div>\r\n        <div className={store.darkmode ? \"dark\" : \"\"}>\r\n          <button onClick={(e) => dispatch(toggleDarkMode(e))} className=\"headerButton\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-moon c-button__icon\"><path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path></svg>\r\n          </button>\r\n          {store.instructions &&\r\n            <div className={store.darkmode ? \"dark card\" : \"card\"}>\r\n              <strong className=\"textCenter\"><p>How to play?</p></strong>\r\n              <span>Contrary to popular belief, it's actually quite simple.</span>\r\n              <ul>\r\n                <li> Click a square, you get a number. That number is the number of how many mines are surrounding it. If you find the mine, you can open \"unopened\" squares around it, opening more areas.</li>\r\n                <li>Enabling the <i>flag mode</i> will flag the block rather than opening when you click on a block.</li>\r\n                <li>Open all the blocks with out mines to get chicken dinner. 😋</li>\r\n              </ul>\r\n              <a href=\"https://en.wikipedia.org/wiki/Minesweeper_(video_game)\" target=\"_blank\"><span>Read More</span></a>\r\n            </div>}\r\n          <span onClick={(e) => dispatch(toggleInstructions(e))} className=\"how\" style={{ 'float': 'right' }}>?</span>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const withdrawMoney = amount => ({\r\n  type: \"WITHDRAW\",\r\n  payload: amount\r\n});\r\n\r\nexport const revealCell = (i, j) => ({\r\n  type: \"REVEAL\",\r\n  rowNum: parseInt(i),\r\n  colNum: parseInt(j)\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: \"RESET\"\r\n});\r\n\r\nexport const toggleFlagMode = () => ({\r\n  type: \"TOGGLEFLAGMODE\"\r\n});\r\n\r\nexport const flagCell = (i, j) => ({\r\n  type: \"FLAG\",\r\n  rowNum: parseInt(i),\r\n  colNum: parseInt(j)\r\n});\r\n\r\nexport const toggleDarkMode = () => ({\r\n  type: \"DARKMODE\"\r\n});\r\n\r\nexport const toggleInstructions = () => ({\r\n  type: \"INSTRUCTIONS\"\r\n});","import React from \"react\";\r\n//import formatNumber from \"format-number\";\r\nimport { revealCell, reset, toggleFlagMode, flagCell } from \"../actions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport flagsvg from '../images/flag.svg';\r\nimport bombsvg from '../images/bomb.svg';\r\nimport coolsvg from '../images/in-love.svg';\r\nimport cryingsvg from '../images/sad.svg';\r\nimport confusionsvg from '../images/happy.svg';\r\n\r\n\r\nfunction Game() {\r\n\r\n  const store = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const reveal = e => {\r\n    const i = e.target.dataset.i;\r\n    const j = e.target.dataset.j;\r\n    return revealCell(i, j);\r\n  };\r\n\r\n  const flag = e => {\r\n    const i = e.target.dataset.i;\r\n    const j = e.target.dataset.j;\r\n    return flagCell(i, j);\r\n  };\r\n\r\n  const getButtonStyle = (element, dark) => {\r\n    let style = {}\r\n    if (element.revealed) {\r\n      if (dark) {\r\n        style[\"box-shadow\"] = \"inset 3px 3px 6px rgb(52, 52, 49), inset -3px -3px 6px #000000\";\r\n      } else {\r\n        style[\"box-shadow\"] = \"inset 3px 3px 6px #bec3c9, inset -3px -3px 6px #ffffff\";\r\n      }\r\n      style[\"font-weight\"] = \"bold\";\r\n    }\r\n    if (element.value === 1) {\r\n      style.color = \"green\";\r\n    }\r\n    if (element.value === 2) {\r\n      style.color = \"#D69E2E\";\r\n    }\r\n    if (element.value >= 3) {\r\n      style.color = \"red\";\r\n    }\r\n    return style;\r\n  }\r\n\r\n  const getFlagButtonStyle = (mode, dark) => {\r\n    let style = {};\r\n    if (mode) {\r\n      if (dark) {\r\n        style[\"box-shadow\"] = \"inset 3px 3px 6px rgb(52, 52, 49), inset -3px -3px 6px #000000\";\r\n      } else {\r\n        style[\"box-shadow\"] = \"inset 3px 3px 6px #bec3c9, inset -3px -3px 6px #ffffff\";\r\n      }\r\n      style[\"color\"] = \"#F56565\";\r\n    }\r\n    return style;\r\n  }\r\n\r\n  return (\r\n    <div className={store.darkmode ? \"dark\" : \"\"}>\r\n      <div className=\"App\" >\r\n        {\r\n          store.blasted && <span>Game over, Please try again!</span>\r\n        }\r\n        {\r\n          store.remaining === store.mines && <h4>Great Game!</h4>\r\n        }\r\n        <section className={store.darkmode ? \"App__buttons dark\" : \"App__buttons\"}>\r\n          <button onClick={(e) => dispatch(reset(e))}>\r\n            {\r\n              store.blasted ? <img width=\"15px\" height=\"15px\" src={cryingsvg} alt=\"sad\" style={{ 'margin-right': \"5px\" }}></img> :\r\n                (store.remaining === store.mines) ?\r\n                  <img width=\"15px\" height=\"15px\" alt=\"cool\" src={coolsvg} style={{ 'margin-right': \"5px\" }}></img> :\r\n                  <img width=\"15px\" height=\"15px\" alt=\"reset\" src={confusionsvg} style={{ 'margin-right': \"5px\" }}></img>\r\n            }Reset</button>\r\n          <button style={getFlagButtonStyle(store.flagMode, store.darkmode)} onClick={(e) => dispatch(toggleFlagMode(e))}>\r\n            <img width=\"15px\" height=\"15px\" src={flagsvg} alt=\"flag\"></img> Flag Mode</button>\r\n        </section>\r\n        <div className=\"grid\">\r\n          <table>\r\n            <tbody>\r\n              {\r\n                store.grid.map(function (item, i) {\r\n                  var entry = item.map(function (element, j) {\r\n                    return (\r\n                      <td key={j}>\r\n                        <button data-i={i}\r\n                          data-j={j}\r\n                          style={getButtonStyle(element, store.darkmode)}\r\n                          onClick={(e) => dispatch(store.flagMode ? flag(e) : reveal(e))}\r\n                          disabled={store.blasted || element.revealed || store.remaining === store.mines}>\r\n                          {element.revealed ?\r\n                            (element.mine ? <img data-i={i} data-j={j} width=\"20px\" height=\"20px\" src={bombsvg}></img> : (element.value === 0 ? \"\" : element.value)) :\r\n                            (element.flagged ? <img data-i={i} data-j={j} width=\"15px\" height=\"15px\" src={flagsvg}></img> : \" \")}\r\n                        </button>\r\n                      </td>\r\n                    );\r\n                  });\r\n                  return (\r\n                    <tr key={i}>{entry}</tr>\r\n                  );\r\n                })\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;","let rows = 10, cols = 10, totalMines = 10;\r\n\r\n\r\nfunction make2DArray(rows, cols) {\r\n  let arr = new Array(rows);\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = new Array(cols);\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction Cell(rowNum, colNum) {\r\n  return {\r\n    mine: false,\r\n    value: 0,\r\n    revealed: false,\r\n    rowNum: rowNum,\r\n    colNum: colNum,\r\n    flagged: false\r\n  }\r\n}\r\n\r\nfunction initializeGrid(grid) {\r\n  for (let i = 0; i < cols; i++) {\r\n    for (let j = 0; j < rows; j++) {\r\n      grid[i][j] = new Cell(i, j);\r\n    }\r\n  }\r\n}\r\n\r\nfunction insertMines(grid) {\r\n  let options = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    for (let j = 0; j < cols; j++) {\r\n      options.push([i, j]);\r\n    }\r\n  }\r\n  for (let n = 0; n < totalMines; n++) {\r\n    let index = Math.floor(Math.random() * options.length);\r\n    let choice = options[index];\r\n    let i = choice[0];\r\n    let j = choice[1];\r\n    // Deletes that spot so it's no longer an option\r\n    options.splice(index, 1);\r\n    grid[i][j].mine = true;\r\n  }\r\n}\r\n\r\nfunction populateValues(grid) {\r\n  for (let rowNum = 0; rowNum < rows; rowNum++) {\r\n    for (let colNum = 0; colNum < cols; colNum++) {\r\n      let cell = grid[rowNum][colNum];\r\n      if (cell.mine)\r\n        cell.value = 'M';\r\n      else {\r\n        for (var xoff = -1; xoff <= 1; xoff++) {\r\n          var i = rowNum + xoff;\r\n          if (i < 0 || i >= rows) continue;\r\n\r\n          for (var yoff = -1; yoff <= 1; yoff++) {\r\n            var j = colNum + yoff;\r\n            if (j < 0 || j >= cols) continue;\r\n\r\n            var neighbor = grid[i][j];\r\n            if (neighbor.mine) {\r\n              cell.value++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction makeGrid(i, j, m) {\r\n  rows = i;\r\n  cols = j;\r\n  totalMines = m;\r\n  let grid = make2DArray(i, j);\r\n  initializeGrid(grid);\r\n  insertMines(grid);\r\n  populateValues(grid);\r\n  const initialState = {\r\n    rows: rows,\r\n    cols: cols,\r\n    mines: totalMines,\r\n    grid: grid,\r\n    blasted: false,\r\n    remaining: rows * cols,\r\n    flagMode: false,\r\n    darkmode: false,\r\n    instructions: false\r\n  };\r\n  return initialState;\r\n}\r\n\r\nexport default makeGrid;","import makeGrid from \"../makeGrid\";\r\n\r\nfunction revealcell(state, rowNum, colNum) {\r\n  let grid = state.grid;\r\n  if (!grid[rowNum][colNum].flagged) {\r\n    state.remaining--;\r\n    grid[rowNum][colNum].revealed = true;\r\n    if (grid[rowNum][colNum].value === 'M')\r\n      state.blasted = true;\r\n    if (grid[rowNum][colNum].value === 0) {\r\n      for (var xoff = -1; xoff <= 1; xoff++) {\r\n        var i = rowNum + xoff;\r\n        if (i < 0 || i >= grid.length) continue;\r\n\r\n        for (var yoff = -1; yoff <= 1; yoff++) {\r\n          var j = colNum + yoff;\r\n          if (j < 0 || j >= grid[i].length) continue;\r\n\r\n          if (!grid[i][j].revealed) revealcell(state, i, j);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction flagcell(grid, rowNum, colNum) {\r\n  grid[rowNum][colNum].flagged = !grid[rowNum][colNum].flagged;\r\n  return grid;\r\n}\r\n\r\nfunction resetGrid(state) {\r\n  let newState = makeGrid(state.rows, state.cols, state.mines)\r\n  newState.darkmode = state.darkmode;\r\n  return newState;\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DARKMODE\":\r\n      let root = document.documentElement;\r\n      if (state.darkmode)\r\n        root.style.setProperty('--main-bg-color', \"#E0E5EC\");\r\n      else\r\n        root.style.setProperty('--main-bg-color', \"#181818\");\r\n      return {\r\n        ...state,\r\n        darkmode: !state.darkmode\r\n      };\r\n\r\n    case \"REVEAL\":\r\n      return revealcell(Object.assign({}, state), action.rowNum, action.colNum);\r\n\r\n    case \"RESET\":\r\n      return resetGrid(state);\r\n\r\n    case \"TOGGLEFLAGMODE\":\r\n      return {\r\n        ...state,\r\n        flagMode: !state.flagMode\r\n      }\r\n\r\n    case \"INSTRUCTIONS\":\r\n      return {\r\n        ...state,\r\n        instructions: !state.instructions\r\n      }\r\n\r\n    case \"FLAG\":\r\n      return {\r\n        ...state,\r\n        grid: flagcell(state.grid, action.rowNum, action.colNum)\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport reducer from \"../reducers\";\r\nimport makeGrid from \"../makeGrid\";\r\n\r\nlet rows = 10;\r\nlet cols = 10;\r\nlet totalMines = 20;\r\n\r\nconst store = createStore(reducer, makeGrid(rows, cols, totalMines), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport default store;","import React from 'react';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\nimport Game from './components/Game';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n        <Header />\r\n      </Provider>\r\n      <Provider store={store}>\r\n        <Game />\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}